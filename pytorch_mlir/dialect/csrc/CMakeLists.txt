set(LLVM_OPTIONAL_SOURCES
  test.cpp
  ATenToAIRPass.cpp
  AffineToAIRPass.cpp
  AcapLoopLoweringPass.cpp
  AcapHerdAssignPass.cpp
  AcapHerdLoweringPass.cpp
  AcapOutliner.cpp
  AffineLoopOptPass.cpp
  AIRAutomaticTilingPass.cpp
  AIRRegularizeLoopPass.cpp
  AIRLoopPermutationPass.cpp
  ATenDialect.cpp
  AIRDialect.cpp
  AIRLoweringPass.cpp
  ATenDialectOpStats.cpp
  ATenLoweringPass.cpp
  ATenModulePass.cpp
  ATenOpReport.cpp
  ATenSimpleAllocatePass.cpp
  ATenToStd.cpp
  LivenessReport.cpp
  ReturnEliminationPass.cpp
  AIRToAffine.cpp
  AIRToLinalg.cpp
  AIRLinalgCodegen.cpp
  AIRToAIEPass.cpp
  Util.cpp
  LowerToLibATenPass.cpp
  AIRRtDialect.cpp
  AIRRtOps.cpp
  AIRRtToLLVMPass.cpp
  XTenDialect.cpp
  XTenOps.cpp

  )

add_mlir_library(ATen
  ATenToAIRPass.cpp
  AffineToAIRPass.cpp
  AcapLoopLoweringPass.cpp
  AcapHerdAssignPass.cpp
  AcapHerdLoweringPass.cpp
  AcapOutliner.cpp
  AffineLoopOptPass.cpp
  AIRAutomaticTilingPass.cpp
  AIRRegularizeLoopPass.cpp
  AIRLoopPermutationPass.cpp
  ATenDialect.cpp
  AIRDialect.cpp
  AIRLoweringPass.cpp
  ATenDialectOpStats.cpp
  ATenLoweringPass.cpp
  ATenModulePass.cpp
  ATenOpReport.cpp
  ATenSimpleAllocatePass.cpp
  ATenToStd.cpp
  LivenessReport.cpp
  ReturnEliminationPass.cpp
  AIRToAffine.cpp
  AIRToLinalg.cpp
  AIRLinalgCodegen.cpp
  AIRToAIEPass.cpp
  Util.cpp
  LowerToLibATenPass.cpp
  XTenNamePass.cpp
  XTenOpWrapper.cpp
  XTenDataflowExplorer.cpp
  XTenDataflowUtils.cpp
  XTenDataflowPass.cpp
  AIRRtDialect.cpp
  AIRRtOps.cpp
  AIRRtToLLVMPass.cpp
  XTenDialect.cpp
  XTenOps.cpp

  ADDITIONAL_HEADER_DIRS
  ${PROJECT_SOURCE_DIR}/dialect/include
  ${PROJECT_BINARY_DIR}/dialect/include

  DEPENDS
  MLIRAIRIncGen
  MLIRAIRPassIncGen
  MLIRAIREnumsIncGen
  MLIRAIROpInterfacesIncGen

  LINK_LIBS
  NPCOMPATenDialect
  NPCOMPBasicpyDialect
  MLIR

  AIE
  )
llvm_update_compile_flags(ATen)
