set(LLVM_OPTIONAL_SOURCES
  test.cpp
  ATenToAIRPass.cpp
  AffineToAIRPass.cpp
  AcapLoopLoweringPass.cpp
  AcapHerdAssignPass.cpp
  AcapHerdLoweringPass.cpp
  AcapOutliner.cpp
  AffineLoopOptPass.cpp
  ATenDialect.cpp
  AIRDialect.cpp
  AIRLoweringPass.cpp
  ATenDialectOpStats.cpp
  ATenLayerNamePass.cpp
  ATenLoweringPass.cpp
  ATenModulePass.cpp
  ATenOpReport.cpp
  ATenSimpleAllocatePass.cpp
  ATenToStd.cpp
  LivenessReport.cpp
  ReturnEliminationPass.cpp
  AIRToAffine.cpp
  AIRToAIEPass.cpp
  Util.cpp
  )

add_mlir_library(ATen
  ATenToAIRPass.cpp
  AffineToAIRPass.cpp
  AcapLoopLoweringPass.cpp
  AcapHerdAssignPass.cpp
  AcapHerdLoweringPass.cpp
  AcapOutliner.cpp
  AffineLoopOptPass.cpp
  ATenDialect.cpp
  AIRDialect.cpp
  AIRLoweringPass.cpp
  ATenDialectOpStats.cpp
  ATenLayerNamePass.cpp
  ATenLoweringPass.cpp
  ATenModulePass.cpp
  ATenOpReport.cpp
  ATenSimpleAllocatePass.cpp
  ATenToStd.cpp
  LivenessReport.cpp
  ReturnEliminationPass.cpp
  AIRToAffine.cpp
  AIRToAIEPass.cpp
  Util.cpp

  ADDITIONAL_HEADER_DIRS
  ${PROJECT_SOURCE_DIR}/dialect/include
  ${PROJECT_BINARY_DIR}/dialect/include
  
  DEPENDS
  MLIRAIRIncGen
  MLIRAIRPassIncGen
  MLIRAIREnumsIncGen
  MLIRAIROpInterfacesIncGen

  LINK_LIBS
  NPCOMPATenDialect
  MLIR

  AIE
  )
llvm_update_compile_flags(ATen)

add_llvm_executable(test.exe
  test.cpp
  )
llvm_update_compile_flags(test.exe)
get_property(dialect_libs GLOBAL PROPERTY MLIR_DIALECT_LIBS)
get_property(conversion_libs GLOBAL PROPERTY MLIR_CONVERSION_LIBS)
target_link_libraries(test.exe
  PRIVATE
  ${dialect_libs}
  ${conversion_libs}
  ATen
  ${PROJECT_BINARY_DIR}/../aie/lib/libAIE.a
  NPCOMPATenDialect
  MLIRExecutionEngine
  MLIRSCFTransforms
  MLIRLoopAnalysis
  MLIRAnalysis
  MLIRDialect
  MLIREDSC
  MLIROptLib
  MLIRParser
  MLIRPass
  MLIRSPIRV
  MLIRSPIRVTestPasses
  MLIRSPIRVTransforms
  MLIRTransforms
  MLIRTransformUtils
  MLIRTestDialect
  MLIRTestIR
  MLIRTestPass
  MLIRTestTransforms
  MLIRSupport
  MLIRIR
  MLIROptLib
  )
